# 1 "lexer.mll"
 
    open Parser
    open Arg

    let line_num = ref 1
    exception Syntax_error of string
    let syntax_error msg = raise (Syntax_error (msg ^ " on line " ^ (string_of_int !line_num)))

# 11 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\219\255\220\255\054\000\250\255\251\255\085\000\095\000\
    \115\000\137\000\147\000\179\000\189\000\230\000\240\000\251\000\
    \021\001\031\001\041\001\072\001\254\255\255\255\023\000\024\000\
    \082\001\249\255\238\255\027\000\248\255\008\000\019\000\247\255\
    \229\255\026\000\038\000\246\255\224\255\041\000\179\000\057\000\
    \058\000\243\255\244\255\245\255\241\255\239\255\237\255\044\000\
    \051\000\048\000\236\255\063\000\234\255\223\255\071\000\235\255\
    \072\000\079\000\079\000\233\255\081\000\231\255\228\255\078\000\
    \232\255\075\000\230\255\225\255\226\255\227\255\091\000\083\000\
    \105\000\222\255\086\000\091\000\221\255";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\035\000\255\255\255\255\035\000\035\000\
    \035\000\035\000\035\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\035\000\035\000\002\000\255\255\255\255\255\255\255\255\
    \003\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\015\000\
    \013\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\255\255\000\000\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\000\000\255\255\255\255\
    \255\255\000\000\000\000\255\255\000\000\255\255\255\255\000\000\
    \000\000\255\255\255\255\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\255\255\
    \255\255\255\255\000\000\255\255\000\000\000\000\255\255\000\000\
    \255\255\255\255\255\255\000\000\255\255\000\000\000\000\255\255\
    \000\000\255\255\000\000\000\000\000\000\000\000\255\255\255\255\
    \255\255\000\000\255\255\255\255\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\020\000\021\000\000\000\000\000\020\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\005\000\000\000\000\000\000\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\004\000\000\000\000\000\000\000\000\000\000\000\
    \003\000\018\000\007\000\010\000\015\000\006\000\006\000\006\000\
    \006\000\006\000\009\000\006\000\006\000\016\000\012\000\013\000\
    \006\000\006\000\008\000\017\000\014\000\006\000\006\000\006\000\
    \011\000\006\000\006\000\026\000\025\000\028\000\032\000\031\000\
    \036\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\071\000\035\000\038\000\045\000\044\000\
    \053\000\051\000\050\000\052\000\070\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\055\000\062\000\060\000\059\000\061\000\064\000\066\000\
    \074\000\072\000\068\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\073\000\075\000\076\000\
    \000\000\000\000\069\000\067\000\000\000\000\000\000\000\000\000\
    \065\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\057\000\000\000\063\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\056\000\
    \000\000\000\000\058\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\000\000\
    \041\000\000\000\040\000\000\000\000\000\000\000\048\000\039\000\
    \001\000\043\000\054\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\049\000\042\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\047\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\000\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\000\000\000\000\000\000\
    \046\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \033\000\000\000\000\000\037\000\034\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\000\000\029\000\000\000\000\000\000\000\
    \000\000\000\000\030\000\000\000\000\000\023\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\027\000\000\000\000\000\022\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\022\000\023\000\027\000\029\000\030\000\
    \033\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\003\000\034\000\037\000\039\000\040\000\
    \047\000\048\000\049\000\051\000\003\000\006\000\006\000\006\000\
    \006\000\006\000\006\000\006\000\006\000\006\000\006\000\007\000\
    \007\000\007\000\007\000\007\000\007\000\007\000\007\000\007\000\
    \007\000\054\000\056\000\057\000\058\000\060\000\063\000\065\000\
    \070\000\071\000\007\000\008\000\008\000\008\000\008\000\008\000\
    \008\000\008\000\008\000\008\000\008\000\072\000\074\000\075\000\
    \255\255\255\255\007\000\007\000\255\255\255\255\255\255\255\255\
    \008\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\010\000\010\000\010\000\010\000\010\000\
    \010\000\010\000\010\000\010\000\010\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\010\000\255\255\009\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\010\000\
    \255\255\255\255\010\000\011\000\011\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\011\000\011\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\
    \038\000\255\255\038\000\255\255\255\255\255\255\012\000\038\000\
    \000\000\038\000\011\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\012\000\038\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\012\000\013\000\013\000\
    \013\000\013\000\013\000\013\000\013\000\013\000\013\000\013\000\
    \014\000\014\000\014\000\014\000\014\000\014\000\014\000\014\000\
    \014\000\014\000\255\255\015\000\015\000\015\000\015\000\015\000\
    \015\000\015\000\015\000\015\000\015\000\255\255\255\255\255\255\
    \013\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \015\000\255\255\255\255\014\000\015\000\016\000\016\000\016\000\
    \016\000\016\000\016\000\016\000\016\000\016\000\016\000\017\000\
    \017\000\017\000\017\000\017\000\017\000\017\000\017\000\017\000\
    \017\000\018\000\018\000\018\000\018\000\018\000\018\000\018\000\
    \018\000\018\000\018\000\255\255\016\000\255\255\255\255\255\255\
    \255\255\255\255\016\000\255\255\255\255\018\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\017\000\255\255\255\255\018\000\
    \019\000\019\000\019\000\019\000\019\000\019\000\019\000\019\000\
    \019\000\019\000\024\000\024\000\024\000\024\000\024\000\024\000\
    \024\000\024\000\024\000\024\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec lexer_main lexbuf =
    __ocaml_lex_lexer_main_rec lexbuf 0
and __ocaml_lex_lexer_main_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 16 "lexer.mll"
             ( incr line_num; lexer_main lexbuf )
# 219 "lexer.ml"

  | 1 ->
# 17 "lexer.mll"
                      ( lexer_main lexbuf )
# 224 "lexer.ml"

  | 2 ->
let
# 18 "lexer.mll"
                d
# 230 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 18 "lexer.mll"
                  ( LITERAL (int_of_string d) )
# 234 "lexer.ml"

  | 3 ->
let
# 19 "lexer.mll"
              lxm
# 240 "lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 19 "lexer.mll"
                  ( IDENTIFIER (lxm) )
# 244 "lexer.ml"

  | 4 ->
# 20 "lexer.mll"
                ( COMMA )
# 249 "lexer.ml"

  | 5 ->
# 21 "lexer.mll"
                ( COLON )
# 254 "lexer.ml"

  | 6 ->
# 22 "lexer.mll"
             ( INSTR_ADD )
# 259 "lexer.ml"

  | 7 ->
# 23 "lexer.mll"
             ( INSTR_SUB )
# 264 "lexer.ml"

  | 8 ->
# 24 "lexer.mll"
             ( INSTR_MUL )
# 269 "lexer.ml"

  | 9 ->
# 25 "lexer.mll"
             ( INSTR_DIV )
# 274 "lexer.ml"

  | 10 ->
# 26 "lexer.mll"
             ( INSTR_TSTN )
# 279 "lexer.ml"

  | 11 ->
# 27 "lexer.mll"
             ( INSTR_TSTZ )
# 284 "lexer.ml"

  | 12 ->
# 28 "lexer.mll"
             ( INSTR_TSTE )
# 289 "lexer.ml"

  | 13 ->
# 29 "lexer.mll"
             ( INSTR_TSTG )
# 294 "lexer.ml"

  | 14 ->
# 30 "lexer.mll"
              ( INSTR_TSTGE )
# 299 "lexer.ml"

  | 15 ->
# 31 "lexer.mll"
             ( INSTR_TSTL )
# 304 "lexer.ml"

  | 16 ->
# 32 "lexer.mll"
              ( INSTR_TSTLE )
# 309 "lexer.ml"

  | 17 ->
# 33 "lexer.mll"
             ( INSTR_AND )
# 314 "lexer.ml"

  | 18 ->
# 34 "lexer.mll"
            ( INSTR_OR )
# 319 "lexer.ml"

  | 19 ->
# 35 "lexer.mll"
             ( INSTR_NOR )
# 324 "lexer.ml"

  | 20 ->
# 36 "lexer.mll"
             ( INSTR_XOR )
# 329 "lexer.ml"

  | 21 ->
# 37 "lexer.mll"
             ( INSTR_NAND )
# 334 "lexer.ml"

  | 22 ->
# 38 "lexer.mll"
             ( INSTR_COM )
# 339 "lexer.ml"

  | 23 ->
# 39 "lexer.mll"
             ( INSTR_JMP )
# 344 "lexer.ml"

  | 24 ->
# 40 "lexer.mll"
             ( INSTR_CALL )
# 349 "lexer.ml"

  | 25 ->
# 41 "lexer.mll"
             ( INSTR_RET )
# 354 "lexer.ml"

  | 26 ->
# 42 "lexer.mll"
             ( INSTR_MOV )
# 359 "lexer.ml"

  | 27 ->
# 43 "lexer.mll"
             ( INSTR_CLR )
# 364 "lexer.ml"

  | 28 ->
# 44 "lexer.mll"
            ( INSTR_BS )
# 369 "lexer.ml"

  | 29 ->
# 45 "lexer.mll"
            ( INSTR_BC )
# 374 "lexer.ml"

  | 30 ->
# 46 "lexer.mll"
            ( INSTR_BT )
# 379 "lexer.ml"

  | 31 ->
# 47 "lexer.mll"
             ( INSTR_DEF )
# 384 "lexer.ml"

  | 32 ->
# 48 "lexer.mll"
             ( INSTR_NXT )
# 389 "lexer.ml"

  | 33 ->
# 49 "lexer.mll"
             ( LABEL_END )
# 394 "lexer.ml"

  | 34 ->
# 50 "lexer.mll"
              ( LABEL_NEXT )
# 399 "lexer.ml"

  | 35 ->
# 51 "lexer.mll"
                ( syntax_error "Couldn't identify the token" )
# 404 "lexer.ml"

  | 36 ->
# 52 "lexer.mll"
                ( EOF )
# 409 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_lexer_main_rec lexbuf __ocaml_lex_state

;;

